>> What happens when you initialize a repository? Why do you need to do it?

It creates a hidden file called .git which will contain the versions of the files in the repository. Initialization is important because it tells git which directory we want to use VC in.

>> How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area works between the working directory and the repository. The staging area is where files get added before they get commited. It allows the user to choose which files to commit and in what order.

>> How can you use the staging area to make sure you have one commit per logical change?

It acts as an extra step before commiting the file into the repository. This allows the user to commit only the required files according to the changes.

>> What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When the developer wants to experiment with a new feature but doesn't yet want to make that feature part of the game. Branches would help by creating a new version of the repository that is independent from the master branch.

>> How do the diagrams help you visualize the branch structure?

It makes it easier for the developer to know the order of the commits and the different branches existing in the project.

>> What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is one commit which incorporates all the changes made in the two branches. These changes are represented by joining the two branches into one, which shows that the two branches have merged.